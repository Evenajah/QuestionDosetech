{"version":3,"sources":["components/Question.js","App.js","reportWebVitals.js","index.js"],"names":["Question","useState","answerState","setAnswerState","msgs1","useRef","myQuestions","question","answers","correctAnswer","renderQuestion","map","item","className","style","textAlign","items","index","inputId","onChange","e","checked","name","value","htmlFor","checkUserAnswerAllQuestion","catchWrong","forEach","Object","keys","filter","element","length","current","show","severity","detail","checkAnswer","a","clear","id","title","ref","label","onClick","icon","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8TA+HeA,EAxHE,WACf,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACMC,EAAQC,iBAAO,MAEfC,EAAc,CAClB,CACEC,SAAU,aACVC,QAAS,CAAC,IAAK,IAAK,KACpBC,cAAe,GAEjB,CACEF,SAAU,6CACVC,QAAS,CAAC,iBAAkB,QAAS,YACrCC,cAAe,GAEjB,CACEF,SAAU,sCACVC,QAAS,CACP,oBACA,sBACA,oBACA,qBAEFC,cAAe,IAIbC,EAAiBJ,EAAYK,KAAI,SAACC,GACtC,OACE,sBAAKC,UAAU,UAAf,UACE,oBAAIC,MAAO,CAAEC,UAAW,QAAxB,SAAmCH,EAAKL,WACvCK,EAAKJ,QAAQG,KAAI,SAACK,EAAOC,GACxB,OACE,sBAAiBJ,UAAU,sBAA3B,UACE,cAAC,cAAD,CACEK,QAASF,EACTG,SAAU,SAACC,GACTjB,EAAe,2BAAKD,GAAN,kBAAoBU,EAAKL,SAAWU,MAEpDI,QAASnB,EAAYU,EAAKL,YAAcU,EACxCK,KAAK,OACLC,MAAOP,IARX,OAWE,uBAAOQ,QAASR,EAAhB,SAAwBA,MAXhBC,YAmBdQ,EAA6B,WACjC,IAAIC,EAAa,GACjBpB,EAAYqB,SAAQ,SAACf,EAAMK,GAIA,IAHPW,OAAOC,KAAK3B,GAAa4B,QAAO,SAACC,GACjD,OAAOA,IAAYnB,EAAKL,YAEZyB,SACZN,GAAU,+CAAcT,EAAQ,EAAtB,SAIdb,EAAM6B,QAAQC,KAAK,CACjB,CACEC,SAAU,OACVC,OAAO,oDAAD,OAAcV,OAKpBW,EAAW,uCAAG,4BAAAC,EAAA,sEACSlC,EAAM6B,QAAQM,QADvB,iBAEdb,EAAa,GAEuB,IAApCE,OAAOC,KAAK3B,GAAa8B,OAJX,uBAKhBP,IALgB,0BAQlBnB,EAAYqB,SAAQ,SAACf,EAAMK,GACrBf,EAAYU,EAAKL,YAAcK,EAAKH,gBACtCiB,GAAU,+CAAcT,EAAQ,EAAtB,SAIK,KAAfS,EACFtB,EAAM6B,QAAQC,KAAK,CACjB,CACEC,SAAU,QACVC,OAAO,GAAD,OAAKV,EAAL,0BAIVtB,EAAM6B,QAAQC,KAAK,CACjB,CACEC,SAAU,UACVC,OAAO,yKAzBK,2CAAH,qDA+BjB,OACE,qBAAKI,GAAG,mBAAmB3B,UAAU,0BAArC,SACE,qBAAKA,UAAU,UAAf,SACE,eAAC,OAAD,CAAM4B,MAAM,WAAZ,UACE,qBAAK5B,UAAU,SAAf,SAAyBH,IACzB,cAAC,WAAD,CAAUgC,IAAKtC,IACf,cAAC,SAAD,CACEuC,MAAM,eACNC,QAASP,EACTQ,KAAK,qBACLhC,UAAU,8BC5GPiC,MARf,WACE,OACE,qBAAKjC,UAAU,MAAf,SACE,cAAC,EAAD,OCMSkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4a3edf58.chunk.js","sourcesContent":["import \"primeflex/primeflex.css\";\r\nimport { Button } from \"primereact/button\";\r\nimport { Card } from \"primereact/card\";\r\nimport { Messages } from \"primereact/messages\";\r\nimport { RadioButton } from \"primereact/radiobutton\";\r\nimport React, { useRef, useState } from \"react\";\r\n\r\nconst Question = () => {\r\n  const [answerState, setAnswerState] = useState([]);\r\n  const msgs1 = useRef(null);\r\n\r\n  const myQuestions = [\r\n    {\r\n      question: \"1 + 2 is ?\",\r\n      answers: [\"1\", \"2\", \"3\"],\r\n      correctAnswer: 2,\r\n    },\r\n    {\r\n      question: \"What is the best site for Web Programmer ?\",\r\n      answers: [\"Stack Overflow\", \"Quora\", \"w3school\"],\r\n      correctAnswer: 0,\r\n    },\r\n    {\r\n      question: \"Who is Prime minister fo Thailand ?\",\r\n      answers: [\r\n        \"Prayut Chan-o-cha\",\r\n        \"Yingluck Shinawatra\",\r\n        \"Abhisit Vejjajiva\",\r\n        \"Somchai Wongsawat\",\r\n      ],\r\n      correctAnswer: 0,\r\n    },\r\n  ];\r\n\r\n  const renderQuestion = myQuestions.map((item) => {\r\n    return (\r\n      <div className=\"p-col  \">\r\n        <h4 style={{ textAlign: \"left\" }}>{item.question}</h4>\r\n        {item.answers.map((items, index) => {\r\n          return (\r\n            <div key={index} className=\"p-field-radiobutton\">\r\n              <RadioButton\r\n                inputId={items}\r\n                onChange={(e) => {\r\n                  setAnswerState({ ...answerState, [item.question]: index });\r\n                }}\r\n                checked={answerState[item.question] === index}\r\n                name=\"city\"\r\n                value={items}\r\n              />\r\n              &nbsp;\r\n              <label htmlFor={items}>{items}</label>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  });\r\n\r\n  const checkUserAnswerAllQuestion = () => {\r\n    let catchWrong = \"\";\r\n    myQuestions.forEach((item, index) => {\r\n      const findArray = Object.keys(answerState).filter((element) => {\r\n        return element === item.question;\r\n      });\r\n      if (findArray.length === 0) {\r\n        catchWrong += `ข้อที่ ${index + 1} `;\r\n      }\r\n    });\r\n\r\n    msgs1.current.show([\r\n      {\r\n        severity: \"warn\",\r\n        detail: `กรุณาตอบ ${catchWrong}`,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const checkAnswer = async () => {\r\n    const clearMessage = await msgs1.current.clear();\r\n    let catchWrong = \"\";\r\n\r\n    if (Object.keys(answerState).length !== 3) {\r\n      checkUserAnswerAllQuestion();\r\n      return;\r\n    }\r\n    myQuestions.forEach((item, index) => {\r\n      if (answerState[item.question] !== item.correctAnswer) {\r\n        catchWrong += `ข้อที่ ${index + 1} `;\r\n      }\r\n    });\r\n\r\n    if (catchWrong !== \"\") {\r\n      msgs1.current.show([\r\n        {\r\n          severity: \"error\",\r\n          detail: `${catchWrong} ผิด`,\r\n        },\r\n      ]);\r\n    } else {\r\n      msgs1.current.show([\r\n        {\r\n          severity: \"success\",\r\n          detail: `ยินดีด้วย คุณตอบถูกหมดทุกข้อ`,\r\n        },\r\n      ]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"question-section\" className=\"p-grid p-justify-center\">\r\n      <div className=\"p-col-8\">\r\n        <Card title=\"Question\">\r\n          <div className=\"p-grid\">{renderQuestion}</div>\r\n          <Messages ref={msgs1} />\r\n          <Button\r\n            label=\"Check Answer\"\r\n            onClick={checkAnswer}\r\n            icon=\"pi pi-check-square\"\r\n            className=\"p-button-outlined\"\r\n          />\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","import \"./App.css\";\nimport Question from \"./components/Question\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Question />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}